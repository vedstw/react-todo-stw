{"ast":null,"code":"var _jsxFileName = \"/Users/stefan/veda/examples/todo-stw/src/components/Manager.js\";\nimport React from 'react';\nimport Page from './Page';\nimport Section from \"./Section\";\nimport VersionTable from \"./VersionTable\";\nimport VersionPanel from \"./VersionPanel\";\nimport CONFIGURATION from \"./ConfigStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Manager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      announced: [],\n      released: []\n    };\n    this.loadAllData = this.loadAllData.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Page, {\n      update: this.loadAllData,\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Announced versions\",\n        children: this.renderVersions(this.state.announced)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Released versions\",\n        children: /*#__PURE__*/_jsxDEV(VersionTable, {\n          data: this.state.released\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this);\n  }\n\n  setVersions(data) {\n    let announcedVersions = this.getVersionsWithReleasedState(data, false);\n    let releasedVersions = this.getVersionsWithReleasedState(data, true);\n    this.setState({\n      announced: announcedVersions,\n      released: releasedVersions\n    });\n  }\n\n  componentDidMount() {\n    this.loadAllData();\n  }\n\n  loadAllData() {\n    fetch(CONFIGURATION.baseUrl + \"/all\").then(response => response.json()).then(data => this.setVersions(data));\n  }\n\n  getVersionsWithReleasedState(data, releasedState) {\n    return data.filter(version => version.released === releasedState);\n  }\n\n  renderVersions(versions) {\n    if (versions.length === 0) return \"No announced version\";\n    return versions.map((version, index) => /*#__PURE__*/_jsxDEV(VersionPanel, {\n      data: version,\n      update: this.loadAllData\n    }, index + \".\" + version, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this));\n  }\n\n}\n\nexport default Manager;","map":{"version":3,"sources":["/Users/stefan/veda/examples/todo-stw/src/components/Manager.js"],"names":["React","Page","Section","VersionTable","VersionPanel","CONFIGURATION","Manager","Component","constructor","props","state","announced","released","loadAllData","bind","render","renderVersions","setVersions","data","announcedVersions","getVersionsWithReleasedState","releasedVersions","setState","componentDidMount","fetch","baseUrl","then","response","json","releasedState","filter","version","versions","length","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,eAA1B;;;AAGA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AAEA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,IAAD;AAAM,MAAA,MAAM,EAAE,KAAKF,WAAnB;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,oBAAf;AAAA,kBACE,KAAKG,cAAL,CAAoB,KAAKN,KAAL,CAAWC,SAA/B;AADF;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mBAAf;AAAA,+BACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE;AAA/B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAEDK,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB,QAAIC,iBAAiB,GAAG,KAAKC,4BAAL,CAAkCF,IAAlC,EAAwC,KAAxC,CAAxB;AACA,QAAIG,gBAAgB,GAAG,KAAKD,4BAAL,CAAkCF,IAAlC,EAAwC,IAAxC,CAAvB;AACA,SAAKI,QAAL,CAAc;AACZX,MAAAA,SAAS,EAAEQ,iBADC;AAEZP,MAAAA,QAAQ,EAAES;AAFE,KAAd;AAKA;;AAEDE,EAAAA,iBAAiB,GAAG;AACnB,SAAKV,WAAL;AACA;;AAEDA,EAAAA,WAAW,GAAG;AAEbW,IAAAA,KAAK,CAACnB,aAAa,CAACoB,OAAd,GAAwB,MAAzB,CAAL,CACEC,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOR,IAAI,IAAI,KAAKD,WAAL,CAAiBC,IAAjB,CAFf;AAGA;;AAEDE,EAAAA,4BAA4B,CAACF,IAAD,EAAOW,aAAP,EAAsB;AACjD,WAAOX,IAAI,CAACY,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACnB,QAAR,KAAqBiB,aAA5C,CAAP;AACA;;AAEDb,EAAAA,cAAc,CAACgB,QAAD,EAAW;AACxB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,CAAxB,EAA2B,OAAO,sBAAP;AAC3B,WAAOD,QAAQ,CAACE,GAAT,CAAa,CAACH,OAAD,EAAUI,KAAV,kBACnB,QAAC,YAAD;AAA0C,MAAA,IAAI,EAAEJ,OAAhD;AAAyD,MAAA,MAAM,EAAE,KAAKlB;AAAtE,OAAmBsB,KAAK,GAAG,GAAR,GAAcJ,OAAjC;AAAA;AAAA;AAAA;AAAA,YADM,CAAP;AAGA;;AAvDoC;;AA2DtC,eAAezB,OAAf","sourcesContent":["import React from 'react'\nimport Page from './Page'\nimport Section from \"./Section\";\nimport VersionTable from \"./VersionTable\";\nimport VersionPanel from \"./VersionPanel\";\nimport CONFIGURATION from \"./ConfigStore\";\n\n\nclass Manager extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tannounced: [],\n\t\t\treleased: []\n\t\t}\n\t\tthis.loadAllData = this.loadAllData.bind(this);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Page update={this.loadAllData}>\n\t\t\t\t<Section title=\"Announced versions\">\n\t\t\t\t\t{this.renderVersions(this.state.announced)}\n\t\t\t\t</Section>\n\t\t\t\t<Section title=\"Released versions\">\n\t\t\t\t\t<VersionTable data={this.state.released}/>\n\t\t\t\t</Section>\n\t\t\t</Page>\n\t\t);\n\t}\n\n\tsetVersions(data) {\n\t\tlet announcedVersions = this.getVersionsWithReleasedState(data, false);\n\t\tlet releasedVersions = this.getVersionsWithReleasedState(data, true);\n\t\tthis.setState({\n\t\t\t\tannounced: announcedVersions,\n\t\t\t\treleased: releasedVersions\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadAllData();\n\t}\n\n\tloadAllData() {\n\n\t\tfetch(CONFIGURATION.baseUrl + \"/all\")\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setVersions(data));\n\t}\n\n\tgetVersionsWithReleasedState(data, releasedState) {\n\t\treturn data.filter(version => version.released === releasedState);\n\t}\n\n\trenderVersions(versions) {\n\t\tif (versions.length === 0) return \"No announced version\";\n\t\treturn versions.map((version, index) => (\n\t\t\t<VersionPanel key={index + \".\" + version} data={version} update={this.loadAllData}/>\n\t\t));\n\t}\n}\n\n\nexport default Manager;"]},"metadata":{},"sourceType":"module"}