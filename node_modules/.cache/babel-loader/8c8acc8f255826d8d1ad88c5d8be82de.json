{"ast":null,"code":"var _jsxFileName = \"/Users/stefan/veda/examples/todo-stw/src/components/ToDoApp.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Page from './Page';\nimport Section from \"./Section\";\nimport TaskEditor from './TaskEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  beschreibung: 'Überweisung abholen',\n  wichtig: true\n}, {\n  id: 2,\n  beschreibung: 'Kuchen backen für Almutes Geburtstag',\n  wichtig: true\n}, {\n  id: 3,\n  beschreibung: 'Kaffee kaufen',\n  wichtig: false\n}];\n\nfunction ToDoApp() {\n  _s();\n\n  const [tasks, setTasks] = useState(initialTasks);\n  const [maxID, setMaxID] = useState(3);\n\n  const toggleWichtig = clicked => setTasks(tasks.map(task => task.id === clicked ? { ...task,\n    wichtig: !task.wichtig\n  } : task));\n\n  const deleteTask = clicked => setTasks(tasts.filter(task => task.id !== clicked));\n\n  const createID = () => {\n    const newID = maxID + 1;\n    setMaxID(newID);\n    return newID;\n  };\n\n  const addTask = beschreibung => {\n    console.log('new task: ' + beschreibung);\n    tasks.push({\n      id: createID(),\n      beschreibung: beschreibung,\n      wichtig: false\n    });\n    setTasks(tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    addTask: addTask,\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"To Do\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskEditor, {\n        task: task,\n        onToggle: toggleWichtig,\n        onDelete: deleteTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }, this)) : \"No tasks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ToDoApp, \"5+rRTf2w6dOaClHbcHu2gUiV0fk=\");\n\n_c = ToDoApp;\nexport default ToDoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoApp\");","map":{"version":3,"sources":["/Users/stefan/veda/examples/todo-stw/src/components/ToDoApp.js"],"names":["useState","Page","Section","TaskEditor","initialTasks","id","beschreibung","wichtig","ToDoApp","tasks","setTasks","maxID","setMaxID","toggleWichtig","clicked","map","task","deleteTask","tasts","filter","createID","newID","addTask","console","log","push","length"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACCC,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,qBAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CADmB,EAMnB;AACCF,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,sCAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CANmB,EAWnB;AACCF,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,eAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CAXmB,CAArB;;AAkBA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,YAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMa,aAAa,GAAIC,OAAD,IAAaJ,QAAQ,CAACD,KAAK,CAACM,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYS,OAAZ,GAAsB,EAAC,GAAGE,IAAJ;AAAUT,IAAAA,OAAO,EAAE,CAACS,IAAI,CAACT;AAAzB,GAAtB,GAA0DS,IAA5E,CAAD,CAA3C;;AACA,QAAMC,UAAU,GAAIH,OAAD,IAAaJ,QAAQ,CAACQ,KAAK,CAACC,MAAN,CAAcH,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYS,OAAlC,CAAD,CAAxC;;AACA,QAAMM,QAAQ,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGV,KAAK,GAAC,CAApB;AACAC,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACA,WAAOA,KAAP;AACA,GAJD;;AAKA,QAAMC,OAAO,GAAIhB,YAAD,IAAmB;AAClCiB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAelB,YAA3B;AACAG,IAAAA,KAAK,CAACgB,IAAN,CAAW;AACVpB,MAAAA,EAAE,EAAEe,QAAQ,EADF;AAEVd,MAAAA,YAAY,EAAEA,YAFJ;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAAX;AAKAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,GARD;;AASA,sBACC,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEa,OAAf;AAAA,2BACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA,gBACEb,KAAK,CAACiB,MAAN,GAAe,CAAf,GAAmBjB,KAAK,CAACM,GAAN,CAAUC,IAAI,iBACjC,QAAC,UAAD;AAA0B,QAAA,IAAI,EAAEA,IAAhC;AAAsC,QAAA,QAAQ,EAAEH,aAAhD;AAA+D,QAAA,QAAQ,EAAEI;AAAzE,SAAiBD,IAAI,CAACX,EAAtB;AAAA;AAAA;AAAA;AAAA,cADmB,CAAnB,GAEE;AAHJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GA5BQG,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import {useState} from 'react'\nimport Page from './Page'\nimport Section from \"./Section\";\nimport TaskEditor from './TaskEditor'\n\nconst initialTasks = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tbeschreibung: 'Überweisung abholen',\n\t\t\twichtig: true\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tbeschreibung: 'Kuchen backen für Almutes Geburtstag',\n\t\t\twichtig: true\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tbeschreibung: 'Kaffee kaufen',\n\t\t\twichtig: false\n\t\t}\n\t];\n\nfunction ToDoApp() {\n\tconst [tasks, setTasks] = useState(initialTasks)\n\tconst [maxID, setMaxID] = useState(3)\n\tconst toggleWichtig = (clicked) => setTasks(tasks.map(task => task.id === clicked ? {...task, wichtig: !task.wichtig} : task))\n\tconst deleteTask = (clicked) => setTasks(tasts.filter((task => task.id !== clicked)))\n\tconst createID = () => {\n\t\tconst newID = maxID+1\n\t\tsetMaxID(newID)\n\t\treturn newID\n\t}\n\tconst addTask = (beschreibung) =>  {\n\t\tconsole.log('new task: ' + beschreibung)\n\t\ttasks.push({\n\t\t\tid: createID(),\n\t\t\tbeschreibung: beschreibung,\n\t\t\twichtig: false\n\t\t})\n\t\tsetTasks(tasks)\n\t}\n\treturn (\n\t\t<Page addTask={addTask}>\n\t\t\t<Section title=\"To Do\">\n\t\t\t\t{tasks.length > 0 ? tasks.map(task =>\n\t\t\t\t\t<TaskEditor key={task.id} task={task} onToggle={toggleWichtig} onDelete={deleteTask}/>)\n\t\t\t\t\t: \"No tasks.\"}\n\t\t\t</Section>\n\t\t</Page>\n\t);\n}\n\n\n\n\n\n\n\nexport default ToDoApp;"]},"metadata":{},"sourceType":"module"}