{"ast":null,"code":"var _jsxFileName = \"/Users/stefan/veda/examples/todo-stw/src/components/ToDoApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Page from './Page';\nimport Section from \"./Section\";\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  beschreibung: 'Überweisung abholen',\n  wichtig: true\n}, {\n  id: 2,\n  beschreibung: 'Kuchen backen für Almutes Geburtstag',\n  wichtig: true\n}, {\n  id: 3,\n  beschreibung: 'Kaffee kaufen',\n  wichtig: false\n}];\n\nfunction ToDoApp() {\n  _s();\n\n  const [tasks, setTasks] = useState(initialTasks);\n  const [maxID, setMaxID] = useState(3);\n\n  const toggleWichtig = id => {\n    // e.preventDefault()\n    console.log('toggle ' + id); // setTasks(tasks.map(task => task.id === id ? {...task, wichtig: !task.wichtig} : task))\n  };\n\n  const addTask = beschreibung => {\n    console.log('new task: ' + beschreibung);\n    const newID = maxID + 1;\n    setMaxID(newID);\n    const newTask = {\n      id: newID,\n      beschreibung: beschreibung,\n      wichtig: false\n    };\n    const wow = tasks + newTask;\n    debugger;\n    setTasks(wow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    addTask: addTask,\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"To Do\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        wichtig: toggleWichtig\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this)) : \"No tasks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ToDoApp, \"5+rRTf2w6dOaClHbcHu2gUiV0fk=\");\n\n_c = ToDoApp;\nexport default ToDoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoApp\");","map":{"version":3,"sources":["/Users/stefan/veda/examples/todo-stw/src/components/ToDoApp.js"],"names":["React","useState","Page","Section","Task","initialTasks","id","beschreibung","wichtig","ToDoApp","tasks","setTasks","maxID","setMaxID","toggleWichtig","console","log","addTask","newID","newTask","wow","length","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACCC,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,qBAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CADmB,EAMnB;AACCF,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,sCAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CANmB,EAWnB;AACCF,EAAAA,EAAE,EAAE,CADL;AAECC,EAAAA,YAAY,EAAE,eAFf;AAGCC,EAAAA,OAAO,EAAE;AAHV,CAXmB,CAArB;;AAkBA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACI,YAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMa,aAAa,GAAIR,EAAD,IAAQ;AAC7B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYV,EAAxB,EAF6B,CAG7B;AACA,GAJD;;AAKA,QAAMW,OAAO,GAAIV,YAAD,IAAmB;AAClCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeT,YAA3B;AACA,UAAMW,KAAK,GAAGN,KAAK,GAAC,CAApB;AACAC,IAAAA,QAAQ,CAACK,KAAD,CAAR;AACA,UAAMC,OAAO,GAAG;AACfb,MAAAA,EAAE,EAAEY,KADW;AAEfX,MAAAA,YAAY,EAAEA,YAFC;AAGfC,MAAAA,OAAO,EAAE;AAHM,KAAhB;AAKA,UAAMY,GAAG,GAAGV,KAAK,GAAGS,OAApB;AACA;AACAR,IAAAA,QAAQ,CAACS,GAAD,CAAR;AACA,GAZD;;AAaA,sBACC,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEH,OAAf;AAAA,2BACC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA,gBACEP,KAAK,CAACW,MAAN,GAAe,CAAf,GAAmBX,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACjC,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA,IAA1B;AAAgC,QAAA,OAAO,EAAET;AAAzC,SAAWS,IAAI,CAACjB,EAAhB;AAAA;AAAA;AAAA;AAAA,cADmB,CAAnB,GAEE;AAHJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GA9BQG,O;;KAAAA,O;AAsCT,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\nimport Page from './Page'\nimport Section from \"./Section\";\nimport Task from './Task'\n\nconst initialTasks = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tbeschreibung: 'Überweisung abholen',\n\t\t\twichtig: true\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tbeschreibung: 'Kuchen backen für Almutes Geburtstag',\n\t\t\twichtig: true\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tbeschreibung: 'Kaffee kaufen',\n\t\t\twichtig: false\n\t\t}\n\t];\n\nfunction ToDoApp() {\n\tconst [tasks, setTasks] = useState(initialTasks)\n\tconst [maxID, setMaxID] = useState(3)\n\tconst toggleWichtig = (id) => {\n\t\t// e.preventDefault()\n\t\tconsole.log('toggle ' + id);\n\t\t// setTasks(tasks.map(task => task.id === id ? {...task, wichtig: !task.wichtig} : task))\n\t}\n\tconst addTask = (beschreibung) =>  {\n\t\tconsole.log('new task: ' + beschreibung)\n\t\tconst newID = maxID+1;\n\t\tsetMaxID(newID)\n\t\tconst newTask = {\n\t\t\tid: newID,\n\t\t\tbeschreibung: beschreibung,\n\t\t\twichtig: false\n\t\t}\n\t\tconst wow = tasks + newTask;\n\t\tdebugger;\n\t\tsetTasks(wow)\n\t}\n\treturn (\n\t\t<Page addTask={addTask}>\n\t\t\t<Section title=\"To Do\">\n\t\t\t\t{tasks.length > 0 ? tasks.map(task =>\n\t\t\t\t\t<Task key={task.id} task={task} wichtig={toggleWichtig}/>)\n\t\t\t\t\t: \"No tasks.\"}\n\t\t\t</Section>\n\t\t</Page>\n\t);\n}\n\n\n\n\n\n\n\nexport default ToDoApp;"]},"metadata":{},"sourceType":"module"}